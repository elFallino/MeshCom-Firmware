; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[libs]
lib_deps = 
	SPI
	WiFi
	https://github.com/icssw-org/NTPClient
	https://github.com/durydevelop/arduino-lib-oled
	olikraus/U8g2@^2.36.2
	mikalhart/TinyGPSPlus @ ^1.1.0
	https://github.com/sparkfun/SparkFun_u-blox_GNSS_Arduino_Library
	bitbucket-christandlg/BMx280MI@^1.2.3
	adafruit/Adafruit BME680 Library@^2.0.4
	adafruit/Adafruit CCS811 Library@^1.1.3
	bblanchon/ArduinoJson @ ^7.1.0
	paulstoffregen/OneWire@^2.3.8
	adafruit/Adafruit MCP23017 Arduino Library@^2.3.2
	robtillaart/INA226@^0.6.0
	adafruit/RTClib@^2.1.4

[nrf52libs]
lib_deps = 
	https://github.com/icssw-org/RAK13800-W5100S
	beegee-tokyo/SX126x-Arduino @ ^2.0.29
	adafruit/Adafruit SHTC3 Library@^1.0.1
	adafruit/Adafruit LPS2X@^2.0.6

[upload_settings]
monitor_speed = 115200

[esp32libs]
lib_deps = 
	jgromes/RadioLib@7.1.2
	mbed-seeed/BluetoothSerial@0.0.0+sha.f56002898ee8
	h2zero/NimBLE-Arduino@^2.2.0
	plerup/EspSoftwareSerial@^8.2.0

[nrf52]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
extends = upload_settings
src_filter = 
	+<*>
	-<esp32/*>
	-<Displays/*>
	-<Fonts/*>
	-<GFX_Root/*>
	-<Platforms/*>
	-<SDWrapper/*>
	-<safeboot/*>
build_flags = 
	-D BOARD_RAK4630="RAK4630"
	-D MONITOR_SPEED=${upload_settings.monitor_speed}
	-Isrc/nrf52

[env:wiscore_rak4631]
extends = nrf52
lib_deps = 
	${libs.lib_deps}
	${nrf52libs.lib_deps}
lib_archive = no

[esp32]
platform = espressif32@^6.9.0
framework = arduino
extends = upload_settings
src_filter = 
	+<*>
	-<nrf52/*>
	-<Displays/*>
	-<Fonts/*>
	-<GFX_Root/*>
	-<Platforms/*>
	-<SDWrapper/*>
	-<safeboot/*>
build_flags = 
	-D MONITOR_SPEED=${upload_settings.monitor_speed}
;	-D RADIOLIB_DEBUG_BASIC=1
;	-D RADIOLIB_DEBUG_SPI=1
board_build.partitions = partitions-4MB-safeboot.csv
board_build.app_partition_name = app
;custom_safeboot_img = ${platformio.build_dir}/esp32-safeboot/safeboot.bin
upload_protocol = custom


[env:heltec_wifi_lora_32_V2]
extends = esp32
board = heltec_wifi_lora_32_V2
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
build_flags = 
	${esp32.build_flags}
	-D BOARD_HELTEC="heltec"

[env:heltec_wifi_lora_32_V3]
extends = esp32
board = heltec_wifi_lora_32_V3
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x0000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-S3-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
build_flags = 
	${esp32.build_flags}
	-D BOARD_HELTEC_V3="heltec_v3"

[env:ttgo_tbeam]
extends = esp32
board = ttgo-t-beam
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
	lewisxhe/XPowersLib
build_flags = 
	${esp32.build_flags}
	-D BOARD_TBEAM="tbeam"

[env:ttgo-lora32-v21]
extends = esp32
board = ttgo-lora32-v21
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
build_flags = 
	${esp32.build_flags}
	-D BOARD_TLORA_OLV216="ttgo-lora32-v21"

[env:E22-DevKitC]
extends = esp32
board = az-delivery-devkit-v4
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
build_flags = 
	${esp32.build_flags}
	-D BOARD_E22="az-delivery-devkit-v4"

[env:ttgo_tbeam_SX1268]
extends = esp32
board = ttgo-t-beam
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
	lewisxhe/XPowersLib
build_flags = 
	${esp32.build_flags}
	-D BOARD_SX1268="tbeam_SX1268"

[env:ttgo_tbeam_SX1262]
extends = esp32
board = ttgo-t-beam
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x1000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
	lewisxhe/XPowersLib
build_flags = 
	${esp32.build_flags}
	-D BOARD_SX1262="tbeam_SX1262"

[env:vision-master-e290]
platform = espressif32@^6.9.0
board = heltec_wifi_lora_32_V3
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
board_upload.use_1200bps_touch = true
board_build.partitions = partitions-4MB-safeboot.csv
board_build.app_partition_name = app
;custom_safeboot_img = ${platformio.build_dir}/esp32-S3-safeboot/firmware.bin
upload_protocol = custom
upload_command = pio pkg exec -p "tool-esptoolpy" -- esptool.py -b 921600 write_flash 0x0000 ${platformio.build_dir}/${this.__env__}/bootloader.bin 0xE000 otadata.bin 0x8000 ${platformio.build_dir}/${this.__env__}/partitions.bin 0x10000 ${platformio.build_dir}/esp32-S3-safeboot/safeboot.bin 0xC0000 ${platformio.build_dir}/${this.__env__}/firmware.bin
build_src_filter = 
	+<*>
	-<nrf52/*>
	-<safeboot/*>
lib_deps = 
	${libs.lib_deps}
	${esp32libs.lib_deps}
	ropg/Heltec_ESP32_LoRa_v3@^0.9.1
build_flags = 
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D MONITOR_SPEED=${upload_settings.monitor_speed}
	-D BOARD_E290="Vision_Master_E290"
	-D Vision_Master_E290


[env:esp32-safeboot]
board=esp32dev
framework = arduino
platform = https://github.com/tasmota/platform-espressif32/releases/download/2024.12.30/platform-espressif32.zip
monitor_filters = esp32_exception_decoder, log2file
monitor_speed = 115200
; upload_protocol = esptool
; upload_protocol = espota
; upload_port = 192.168.4.1
lib_compat_mode = strict
lib_ldf_mode = chain
lib_deps =
  mathieucarbou/AsyncTCP @ 3.2.14
  mathieucarbou/ESPAsyncWebServer @ 3.3.23
; ayushsharma82/ElegantOTA @ 3.1.6
build_flags =
  -D HTTPCLIENT_NOSECURE
  ; AsyncTCP
  -D CONFIG_ASYNC_TCP_MAX_ACK_TIME=3000
  -D CONFIG_ASYNC_TCP_PRIORITY=10
  -D CONFIG_ASYNC_TCP_QUEUE_SIZE=128
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
  -D CONFIG_ASYNC_TCP_STACK_SIZE=4096
  ; ESPAsyncWebServer
  -D WS_MAX_QUEUED_MESSAGES=64
  ; ElegantOTA
  -D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
  ; C++
  -Wall -Wextra
  -std=c++17
  -std=gnu++17
  -Oz
build_unflags =
    -std=gnu++11
build_type = release
board_build.partitions = partitions-4MB-safeboot.csv
custom_filename = safeboot
extra_scripts =
	pre:tools/set_custom_name.py
	post:tools/safeboot.py
build_src_filter = 
	+<safeboot/*>
	+<esp32/esp32_flash.h>
	+<esp32/esp32_flash.cpp>

[env:esp32-S3-safeboot]
board = heltec_wifi_lora_32_V3
framework = arduino
platform = https://github.com/tasmota/platform-espressif32/releases/download/2024.12.30/platform-espressif32.zip
monitor_filters = esp32_exception_decoder, log2file
monitor_speed = 115200
; upload_protocol = esptool
; upload_protocol = espota
; upload_port = 192.168.4.1
lib_compat_mode = strict
lib_ldf_mode = chain
lib_deps =
  mathieucarbou/AsyncTCP @ 3.2.14
  mathieucarbou/ESPAsyncWebServer @ 3.3.23
; ayushsharma82/ElegantOTA @ 3.1.6
build_flags =
  -D HTTPCLIENT_NOSECURE
  -D ARDUINO_USB_CDC_ON_BOOT=1
  ; AsyncTCP
  -D CONFIG_ASYNC_TCP_MAX_ACK_TIME=3000
  -D CONFIG_ASYNC_TCP_PRIORITY=10
  -D CONFIG_ASYNC_TCP_QUEUE_SIZE=128
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
  -D CONFIG_ASYNC_TCP_STACK_SIZE=4096
  ; ESPAsyncWebServer
  -D WS_MAX_QUEUED_MESSAGES=64
  ; ElegantOTA
  -D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
  ; C++
  -Wall -Wextra
  -std=c++17
  -std=gnu++17
  -Oz
build_unflags =
    -std=gnu++11
build_type = release
board_build.partitions = partitions-4MB-safeboot.csv
custom_filename = safeboot
extra_scripts =
	pre:tools/set_custom_name.py
	post:tools/safeboot.py
build_src_filter = 
	+<safeboot/*>
	+<esp32/esp32_flash.h>
	+<esp32/esp32_flash.cpp>